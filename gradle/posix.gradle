def check(preset) {
    
}
kotlin {
    targets {

        println presets.withType(presets.macosX64.class).names.toList()
        
        println project.ext.hostManager.isEnabled(presets.linuxX64.konanTarget)
        fromPreset(presets.iosArm32, 'iosArm32')
        fromPreset(presets.iosArm64, 'iosArm64')
        fromPreset(presets.iosX64, 'iosX64')
        fromPreset(presets.macosX64, 'macosX64')
        fromPreset(presets.linuxX64, 'linuxX64')
        fromPreset(presets.mingwX64, 'mingwX64')
    }
    sourceSets {
        posixMain {
            dependencies {
                implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-native', version: coroutines_version
                implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-io-native', version: kotlinx_io_version
                implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-io-native', version: kotlinx_io_version

                implementation "org.jetbrains.kotlinx:atomicfu:$atomic_fu_version"
            }
        }

        posixMain { dependsOn commonMain }
        posixTest { dependsOn posixMain }

        configure([iosArm32Main, iosArm64Main, macosX64Main, linuxX64Main, mingwX64Main]) {
            dependsOn posixMain
        }
    }
}

